# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main
  
#import variable from azure keyvault
variables:
  - group: BattleshipsTerraformSecrets

#use pool named 'Self-Hosted' defined in azure devops.
pool:
  name: Self-Hosted

jobs:
  - job: A1
    container: ukhydrographicoffice/terraform-azure-powershell:latest
    steps:
      
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g @angular/cli@13.2.6
        npm install
        ng build
      displayName: 'npm install Angular and build app'
      workingDirectory: '$(Build.SourcesDirectory)/BattleShip_Site/SPA/BattleShips'

# Initialise terraform using manually defined project secrets (variables in Battleships Terraform Secrets). Gives terraform access and location to store .tfstate file in azure blob storage. 
    - bash: |
        terraform init 
      displayName: 'terraform init'
      workingDirectory: '$(Build.SourcesDirectory)/BattleShip_Site/build/terraform'
      env:
        TF_VAR_ARM_SUBSCRIPTION_ID: $(tf-subscription-id)
        TF_VAR_ARM_TENANT_ID: $(tf-tenant-id)
        TF_VAR_ARM_CLIENT_ID: $(tf-client-id)
        TF_VAR_ARM_CLIENT_SECRET: $(tf-client-secret)
        ARM_ACCESS_KEY: $(tf-access-key)

# terraform plan
    - bash: |
        terraform plan -input=false -out=tfplan
      displayName: 'terraform plan'
      workingDirectory: '$(Build.SourcesDirectory)/BattleShip_Site/build/terraform'
      env:
        TF_VAR_ARM_SUBSCRIPTION_ID: $(tf-subscription-id)
        TF_VAR_ARM_TENANT_ID: $(tf-tenant-id)
        TF_VAR_ARM_CLIENT_ID: $(tf-client-id)
        TF_VAR_ARM_CLIENT_SECRET: $(tf-client-secret)
        ARM_ACCESS_KEY: $(tf-access-key)

# terraform apply 
    - bash: |
        terraform apply "tfplan"
      displayName: 'terraform apply'
      workingDirectory: '$(Build.SourcesDirectory)/BattleShip_Site/build/terraform'
      env:
        TF_VAR_ARM_SUBSCRIPTION_ID: $(tf-subscription-id)
        TF_VAR_ARM_TENANT_ID: $(tf-tenant-id)
        TF_VAR_ARM_CLIENT_ID: $(tf-client-id)
        TF_VAR_ARM_CLIENT_SECRET: $(tf-client-secret)
        ARM_ACCESS_KEY: $(tf-access-key)

# publish artifact to build folder
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/BattleShip_Site/SPA/BattleShips/dist'
        artifactType: 'pipeline'
        artifactName: 'drop'

    - task: AzureCLI@2
      displayName: Azure CLI
      inputs:
        azureSubscription: Visual Studio Enterprise Subscription(a334913d-52be-4a66-9c85-c23d324393f0)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt 
          az storage blob directory upload -c '$web' --account-name battleshipsstaticsite -s "$(System.DefaultWorkingDirectory)/BattleShip_Site/SPA/BattleShips/dist" -d directory --recursive
