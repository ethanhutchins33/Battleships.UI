# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

#pipeline will run when changes pushed to main branch
trigger:
  - main

#import variable from azure keyvault
variables:
  - group: "Battleships Terraform Secrets"

#use pool named 'Self-Hosted' defined in azure devops.
pool:
  name: Self-Hosted

#container: ukhydrographicoffice/terraform-azure-powershell:latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli@13.2.6
    npm install
    ng build
  displayName: 'npm install angular and build app'
  workingDirectory: '$(Build.SourcesDirectory)/BattleShip_Site'


#give terraform permissions here?

- bash: ls '$(Build.SourcesDirectory)/BattleShip_Site/build/terraform'

#Initialise terraform using manually defined project secrets (variables in Battleships Terraform Secrets). Gives terraform access and location to store .tfstate file in azure blob storage.
- bash: |
    terraform init \
    -backend-config="storage_account_name=$tf-storage-account-name" \
    -backend-config="container_name=$tf-container-name" \
    -backend-config="key=$tf-key" \
    -backend-config="resource_group_name=$tf-resource-group-name"
  displayName: 'terraform init'


#Or give terraform permissions here??


#- bash: | terraform plan

#- bash: | terraform apply 




## publish code to resources created by terraform